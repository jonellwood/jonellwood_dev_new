{"ast":null,"code":"import client, { previewClient } from './sanity';\n\nconst getUniquePosts = posts => {\n  const slugs = new Set();\n  return posts.filter(post => {\n    if (slugs.has(post.slug)) {\n      return false;\n    } else {\n      slugs.add(post.slug);\n      return true;\n    }\n  });\n};\n\nconst postFields = `\n  name,\n  title,\n  date,\n  excerpt,\n  'slug': slug.current,\n  'coverImage': coverImage.asset->url,\n  'author': author->{name, 'picture': picture.asset->url},\n`;\n\nconst getClient = preview => preview ? previewClient : client;\n\nexport async function getPreviewPostBySlug(slug) {\n  const data = await getClient(true).fetch(`*[_type == \"post\" && slug.current == $slug] | order(date desc){\n      ${postFields}\n      content\n    }`, {\n    slug\n  });\n  return data[0];\n}\nexport async function getAllPostsWithSlug() {\n  const data = await client.fetch(`*[_type == \"post\"]{ 'slug': slug.current }`);\n  return data;\n}\nexport async function getAllPostsForHome(preview) {\n  const results = await getClient(preview).fetch(`*[_type == \"post\"] | order(date desc, _updatedAt desc){\n      ${postFields}\n    }`);\n  return getUniquePosts(results);\n}\nexport async function getPostAndMorePosts(slug, preview) {\n  const curClient = getClient(preview);\n  const [post, morePosts] = await Promise.all([curClient.fetch(`*[_type == \"post\" && slug.current == $slug] | order(_updatedAt desc) {\n        ${postFields}\n        content,\n      }`, {\n    slug\n  }).then(res => res === null || res === void 0 ? void 0 : res[0]), curClient.fetch(`*[_type == \"post\" && slug.current != $slug] | order(date desc, _updatedAt desc){\n        ${postFields}\n        content,\n      }[0...2]`, {\n    slug\n  })]);\n  return {\n    post,\n    morePosts: getUniquePosts(morePosts)\n  };\n}","map":null,"metadata":{},"sourceType":"module"}