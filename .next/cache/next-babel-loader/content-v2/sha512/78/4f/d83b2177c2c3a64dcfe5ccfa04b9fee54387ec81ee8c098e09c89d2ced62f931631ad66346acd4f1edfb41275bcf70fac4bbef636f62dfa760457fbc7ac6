{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanellwood/Documents/GitHub/jonellwood_dev_new/pages/posts/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nimport Container from '../../components/container';\nimport PostBody from '../../components/post-body';\nimport MoreStories from '../../components/more-stories';\nimport Header from '../../components/header';\nimport PostHeader from '../../components/post-header';\nimport SectionSeparator from '../../components/section-separator';\nimport Layout from '../../components/layout';\nimport { getAllPostsWithSlug, getPostAndMorePosts } from '../../lib/api';\nimport PostTitle from '../../components/post-title';\nimport Head from 'next/head';\nimport { CMS_NAME } from '../../lib/constants';\nexport default function Post({\n  post,\n  morePosts,\n  preview\n}) {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post !== null && post !== void 0 && post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    preview: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), router.isFallback ? __jsx(PostTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, post.title, \" | Next.js Blog Example with \", CMS_NAME)), __jsx(PostHeader, {\n    title: post.title,\n    coverImage: post.coverImage,\n    date: post.date,\n    author: post.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }), __jsx(PostBody, {\n    content: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  })), __jsx(SectionSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), morePosts.length > 0 && __jsx(MoreStories, {\n    posts: morePosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 38\n    }\n  }))));\n}\nexport async function getStaticProps({\n  params,\n  preview = false\n}) {\n  const data = await getPostAndMorePosts(params.slug, preview);\n  return {\n    props: {\n      preview,\n      post: (data === null || data === void 0 ? void 0 : data.post) || null,\n      morePosts: (data === null || data === void 0 ? void 0 : data.morePosts) || null\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const allPosts = await getAllPostsWithSlug();\n  return {\n    paths: (allPosts === null || allPosts === void 0 ? void 0 : allPosts.map(post => ({\n      params: {\n        slug: post.slug\n      }\n    }))) || [],\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/jonathanellwood/Documents/GitHub/jonellwood_dev_new/pages/posts/[slug].js"],"names":["useRouter","ErrorPage","Container","PostBody","MoreStories","Header","PostHeader","SectionSeparator","Layout","getAllPostsWithSlug","getPostAndMorePosts","PostTitle","Head","CMS_NAME","Post","post","morePosts","preview","router","isFallback","slug","title","coverImage","date","author","content","length","getStaticProps","params","data","props","getStaticPaths","allPosts","paths","map","fallback"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport ErrorPage from 'next/error'\nimport Container from '../../components/container'\nimport PostBody from '../../components/post-body'\nimport MoreStories from '../../components/more-stories'\nimport Header from '../../components/header'\nimport PostHeader from '../../components/post-header'\nimport SectionSeparator from '../../components/section-separator'\nimport Layout from '../../components/layout'\nimport { getAllPostsWithSlug, getPostAndMorePosts } from '../../lib/api'\nimport PostTitle from '../../components/post-title'\nimport Head from 'next/head'\nimport { CMS_NAME } from '../../lib/constants'\n\nexport default function Post({ post, morePosts, preview }) {\n  const router = useRouter()\n  if (!router.isFallback && !post?.slug) {\n    return <ErrorPage statusCode={404} />\n  }\n  return (\n    <Layout preview={preview}>\n      <Container>\n        <Header />\n        {router.isFallback ? (\n          <PostTitle>Loadingâ€¦</PostTitle>\n        ) : (\n          <>\n            <article>\n              <Head>\n                <title>\n                  {post.title} | Next.js Blog Example with {CMS_NAME}\n                </title>\n                {/* <meta property=\"og:image\" content={post.ogImage.url} /> */}\n              </Head>\n              <PostHeader\n                title={post.title}\n                coverImage={post.coverImage}\n                date={post.date}\n                author={post.author}\n              />\n              <PostBody content={post.content} />\n            </article>\n            <SectionSeparator />\n            {morePosts.length > 0 && <MoreStories posts={morePosts} />}\n          </>\n        )}\n      </Container>\n    </Layout>\n  )\n}\n\nexport async function getStaticProps({ params, preview = false }) {\n  const data = await getPostAndMorePosts(params.slug, preview)\n  return {\n    props: {\n      preview,\n      post: data?.post || null,\n      morePosts: data?.morePosts || null,\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  const allPosts = await getAllPostsWithSlug()\n  return {\n    paths:\n      allPosts?.map((post) => ({\n        params: {\n          slug: post.slug,\n        },\n      })) || [],\n    fallback: false,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}